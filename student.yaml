openapi: 3.0.3
info:
  title: Swagger Student Management System - OpenAPI 3.0
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
servers:
  - url: https://petstore3.swagger.io/api/v3
tags:
  - name: student
    description: Operations about student
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: course
    description: Operations about course
  
    
paths:
  /student:
    put:
      tags:
        - student
      summary: Update an existing student
      description: Update an existing student by Id
      operationId: updateStudent
      requestBody:
        description: Update an existent student
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
          application/xml:
            schema:
              $ref: '#/components/schemas/Student'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Student'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Student'            
            application/xml:
              schema:
                $ref: '#/components/schemas/Student'
        '400':
          description: Invalid ID supplied
        '404':
          description: Student not found
        '405':
          description: Validation exception
    post:
      tags:
        - student
      summary: Add a new student
      description: Add a new student
      operationId: addStudent
      requestBody:
        description: Create a new student
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
          application/xml:
            schema:
              $ref: '#/components/schemas/Student'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Student'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Student'         
            application/xml:
              schema:
                $ref: '#/components/schemas/Student'
        '405':
          description: Invalid input
    get:
      tags:
        - student
      summary: Get list of all students
      description: Returns list of students
      operationId: getStudentList
      responses:
        '200':
          description: successful operation
          content:
            application/json:
               schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'         
            application/xml:
              schema:
                $ref: '#/components/schemas/Student'
        '400':
          description: Invalid ID supplied
        '404':
          description: Student not found
  /student/{studentId}:
    get:
      tags:
        - student
      summary: Find student by ID
      description: Returns a single student
      operationId: getStudent
      parameters:
        - name: studentId
          in: path
          description: ID of student to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
               schema:
                  $ref: '#/components/schemas/Student'            
            application/xml:
              schema:
                $ref: '#/components/schemas/Student'
        '400':
          description: Invalid ID supplied
        '404':
          description: Student not found
    delete:
      tags:
        - student
      summary: Deletes a student
      description: delete a student
      operationId: deleteStudent
      parameters:
        - name: studentId
          in: path
          description: Student id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
               schema:
                  $ref: '#/components/schemas/Student'            
            application/xml:
              schema:
                $ref: '#/components/schemas/Student'
        '400':
          description: Invalid student value

  
  /course:
    put:
      tags:
        - course
      summary: Update an existing course
      description: Update an existing course by Id
      operationId: updateCourse
      requestBody:
        description: Update an existent course
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
          application/xml:
            schema:
              $ref: '#/components/schemas/Course'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Course'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Course'            
            application/xml:
              schema:
                $ref: '#/components/schemas/Course'
        '400':
          description: Invalid ID supplied
        '404':
          description: Course not found
        '405':
          description: Validation exception
    post:
      tags:
        - course
      summary: Add a new course
      description: Add a new course
      operationId: addCourse
      requestBody:
        description: Create a new course
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
          application/xml:
            schema:
              $ref: '#/components/schemas/Course'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Course'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Course'         
            application/xml:
              schema:
                $ref: '#/components/schemas/Course'
        '405':
          description: Invalid input
    get:
      tags:
        - course
      summary: Get list of all courses
      description: Returns list of courses
      operationId: getCourseList
      responses:
        '200':
          description: successful operation
          content:
            application/json:
               schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'         
            application/xml:
              schema:
                $ref: '#/components/schemas/Course'
        '400':
          description: Invalid ID supplied
        '404':
          description: Course not found
  /course/{courseId}:
    get:
      tags:
        - course
      summary: Find course by ID
      description: Returns a single course
      operationId: getCourse
      parameters:
        - name: courseId
          in: path
          description: ID of course to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
               schema:
                  $ref: '#/components/schemas/Course'            
            application/xml:
              schema:
                $ref: '#/components/schemas/Course'
        '400':
          description: Invalid ID supplied
        '404':
          description: Course not found
    delete:
      tags:
        - course
      summary: Deletes a course
      description: delete a course
      operationId: deleteCourse
      parameters:
        - name: courseId
          in: path
          description: Course id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
               schema:
                  $ref: '#/components/schemas/Course'            
            application/xml:
              schema:
                $ref: '#/components/schemas/Course'
        '400':
          description: Invalid course value



  
components:
  schemas:
    Student:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Ramesh
        address:
          type: string
          format: int64
          example: Pune
        email:
          type: string
          example: ramesh@email.com
        phone:
          type: string
          example: '1234567890'
      xml:
        name: student
    Course:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
        desc:
          type: string
      xml:
        name: course
      
  requestBodies:
    Employee:
      description: Student object that needs to be added
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Student'
        application/xml:
          schema:
            $ref: '#/components/schemas/Student'
    Department:
      description: Course object that needs to be added 
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Course'
        application/xml:
          schema:
            $ref: '#/components/schemas/Course'
